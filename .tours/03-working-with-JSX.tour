{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "03-working-with-JSX",
  "steps": [
    {
      "file": "newreactapp/src/components/header.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 17,
          "character": 1
        }
      },
      "description": "# Understanding JSX\r\n\r\n### 1. JSX stands for Javascript XML like syntax. It is made by mixing HTML, Javascript and CSS.\r\n### 2. Let's write bit of JSX. This time we work with variables,\r\n### 3. Declare a variable score in HeaderComponent function.\r\n```javascript\r\nfunction HeaderComponent() {\r\n    let score = 8\r\n    return ( \r\n        ...\r\n        ...\r\n```\r\n### 3. Use template syntax i.e. {} 'curly brackets' to display the value of score in return block.\r\n```javascript\r\n  return ( \r\n        <div>\r\n            <h1>This is header component!</h1>\r\n            <h2>Score: {score}</h2>\r\n        </div>\r\n     );\r\n```\r\n### 4. At the end, HeaderComponent function will look like this:\r\n```javascript\r\n//first custom component\r\nimport React from 'react';\r\n\r\nfunction HeaderComponent() {\r\n\r\n    let score = 8\r\n\r\n    return ( \r\n        <div>\r\n            <h1>This is header component!</h1>\r\n            <h2>Score: {score}</h2>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n```\r\n### 5. Save the code and see the result in the browser window.\r\n### 6. As with JSX, you are able to display the value of variable score in the view, just by enclosing it in template syntax i.e. {}\r\n### 7. What you return in round brackets () in the function defines the view which is displayed in browser.\r\n### 8. The way, you can work with variables in JSX, you can work with functions as well.\r\n\r\n![Logo](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/th5xamgrr6se0x5ro4g6.png)",
      "title": "01. Understanding JSX (Working with variables in components)"
    },
    {
      "file": "newreactapp/src/components/header.js",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 22,
          "character": 1
        }
      },
      "description": "# Understanding JSX (working with functions in JSX)\r\n\r\n### 1. JSX stands for Javascript XML like syntax. It is made by mixing HTML, Javascript and CSS.\r\n### 2. Let's write bit of JSX. This time we work with function.\r\n### 3. Declare a function spaceCraft() in HeaderComponent function.\r\n```javascript\r\n...\r\n...\r\nlet spaceCraft =()=>{\r\n        return \"Let's travel to Mars\"\r\n    }\r\n        ...\r\n        ...\r\n```\r\n### 3. Use template syntax i.e. {} 'curly brackets' to make a call to function from within JSX. Observe two round brackets after function name when making a call to function from JSX.\r\n```javascript\r\n     return ( \r\n        <div>\r\n            <h1>This is header component!</h1>\r\n            <h2>Score: {score}</h2>\r\n            <h2>Message: {spaceCraft()}</h2>\r\n        </div>\r\n     );\r\n```\r\n### 4. At the end HeaderComponent function will look like this:\r\n```javascript\r\n//first custom component\r\nimport React from 'react';\r\n\r\nfunction HeaderComponent() {\r\n\r\n    let score = 8\r\n\r\n    let spaceCraft =()=>{\r\n        return \"Let's travel to Mars\"\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <h1>This is header component!</h1>\r\n            <h2>Score: {score}</h2>\r\n            <h2>Message: {spaceCraft()}</h2>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n```\r\n### 5. Save the code and see the result in the browser window.\r\n### 6. As with JSX, you are able to display the return value of function in the view, just by enclosing the function name in template syntax i.e. {}",
      "title": "02. Understanding JSX (working with functions in JSX)"
    },
    {
      "title": "03. Working with user event from JSX",
      "description": "# Working with user events from within JSX\r\n\r\n### 1. Create a div with one button in JSX.\r\n```javascript\r\n <div>\r\n    <button onClick={launch}>Click  Me</button>\r\n </div>\r\n```\r\n### 2. As you can understand from the code, \"launch\" function is called on click of the button. Since, it is a function call, it must be enclosed in {}\r\n### 3. Define the function outside the return block and inside the HeaderComponent function, like below:\r\n```javascript\r\n...\r\n...\r\n  let launch = ()=>{\r\n        console.log(\"Rocket launched....\")\r\n    }\r\n...\r\n...\r\n```\r\n### 4. At the end of it, the HeaderComponent function will look like below. You can see the outcome of clicking on the button by opening \"Chrome Developer Tools -> Console\"\r\n```javascript\r\n//first custom component\r\nimport React from 'react';\r\n\r\nfunction HeaderComponent() {\r\n\r\n    let score = 8\r\n\r\n    let spaceCraft =()=>{\r\n        return \"Let's travel to Mars\"\r\n    }\r\n\r\n    let launch = ()=>{\r\n        console.log(\"Rocket launched....\")\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <h1>This is header component!</h1>\r\n            <h2>Score: {score}</h2>\r\n            <h2>Message: {spaceCraft()}</h2>\r\n            <div>\r\n                <button onClick={launch}>Click  Me</button>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n```"
    }
  ]
}